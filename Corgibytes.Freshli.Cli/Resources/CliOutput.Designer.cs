//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Corgibytes.Freshli.Cli.Resources {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CliOutput {
        
        private static System.Resources.ResourceManager resourceMan;
        
        private static System.Globalization.CultureInfo resourceCulture;
        
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CliOutput() {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Resources.ResourceManager ResourceManager {
            get {
                if (object.Equals(null, resourceMan)) {
                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("Corgibytes.Freshli.Cli.Resources.CliOutput", typeof(CliOutput).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static string Help_MainCommand_Description {
            get {
                return ResourceManager.GetString("Help_MainCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_Option_CacheDir_Description {
            get {
                return ResourceManager.GetString("Help_Option_CacheDir_Description", resourceCulture);
            }
        }
        
        internal static string Help_CacheCommand_Description {
            get {
                return ResourceManager.GetString("Help_CacheCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_CachePrepareCommand_Description {
            get {
                return ResourceManager.GetString("Help_CachePrepareCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_CacheDestroyCommand_Description {
            get {
                return ResourceManager.GetString("Help_CacheDestroyCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_CacheDestoyCommand_Option_Force {
            get {
                return ResourceManager.GetString("Help_CacheDestoyCommand_Option_Force", resourceCulture);
            }
        }
        
        internal static string Help_ScanCommand_Description {
            get {
                return ResourceManager.GetString("Help_ScanCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_ScanCommand_Option_Format {
            get {
                return ResourceManager.GetString("Help_ScanCommand_Option_Format", resourceCulture);
            }
        }
        
        internal static string Help_ScanCommand_Option_Output {
            get {
                return ResourceManager.GetString("Help_ScanCommand_Option_Output", resourceCulture);
            }
        }
        
        internal static string Help_ScanCommand_Argument_Path {
            get {
                return ResourceManager.GetString("Help_ScanCommand_Argument_Path", resourceCulture);
            }
        }
        
        internal static string Output_Date {
            get {
                return ResourceManager.GetString("Output_Date", resourceCulture);
            }
        }
        
        internal static string Output_LibYear {
            get {
                return ResourceManager.GetString("Output_LibYear", resourceCulture);
            }
        }
        
        internal static string Output_UpgradesAvailable {
            get {
                return ResourceManager.GetString("Output_UpgradesAvailable", resourceCulture);
            }
        }
        
        internal static string Output_Skipped {
            get {
                return ResourceManager.GetString("Output_Skipped", resourceCulture);
            }
        }
        
        internal static string ScanCommand_ScanCommand_Executing_scan_command_handler {
            get {
                return ResourceManager.GetString("ScanCommand_ScanCommand_Executing_scan_command_handler", resourceCulture);
            }
        }
        
        internal static string MainCommand_MainCommand_Root_Command_Executed {
            get {
                return ResourceManager.GetString("MainCommand_MainCommand_Root_Command_Executed", resourceCulture);
            }
        }
        
        internal static string AuthCommand_AuthCommand_Executing_auth_command_handler {
            get {
                return ResourceManager.GetString("AuthCommand_AuthCommand_Executing_auth_command_handler", resourceCulture);
            }
        }
        
        internal static string ScanCommandRunner_Run_Path_should_not_be_null_or_empty {
            get {
                return ResourceManager.GetString("ScanCommandRunner_Run_Path_should_not_be_null_or_empty", resourceCulture);
            }
        }
        
        internal static string CachePrepareCommandRunner_Run_Preparing_cache {
            get {
                return ResourceManager.GetString("CachePrepareCommandRunner_Run_Preparing_cache", resourceCulture);
            }
        }
        
        internal static string CacheDestroyCommandRunner_Run_Prompt {
            get {
                return ResourceManager.GetString("CacheDestroyCommandRunner_Run_Prompt", resourceCulture);
            }
        }
        
        internal static string CacheDestroyCommandRunner_Run_Abort {
            get {
                return ResourceManager.GetString("CacheDestroyCommandRunner_Run_Abort", resourceCulture);
            }
        }
        
        internal static string CacheDestroyCommandRunner_Run_Destroying {
            get {
                return ResourceManager.GetString("CacheDestroyCommandRunner_Run_Destroying", resourceCulture);
            }
        }
        
        internal static string Exception_Cache_Prepare_NonEmpty {
            get {
                return ResourceManager.GetString("Exception_Cache_Prepare_NonEmpty", resourceCulture);
            }
        }
        
        internal static string Warning_Cache_Destroy_DoesNotExist {
            get {
                return ResourceManager.GetString("Warning_Cache_Destroy_DoesNotExist", resourceCulture);
            }
        }
        
        internal static string Exception_Cache_Destroy_NonCache {
            get {
                return ResourceManager.GetString("Exception_Cache_Destroy_NonCache", resourceCulture);
            }
        }
        
        internal static string Help_GitCommand_Description {
            get {
                return ResourceManager.GetString("Help_GitCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_GitCloneCommand_Description {
            get {
                return ResourceManager.GetString("Help_GitCloneCommand_Description", resourceCulture);
            }
        }
        
        internal static string Help_GitCloneCommand_Option_Git_Path {
            get {
                return ResourceManager.GetString("Help_GitCloneCommand_Option_Git_Path", resourceCulture);
            }
        }
        
        internal static string Help_GitCloneCommand_Option_Branch {
            get {
                return ResourceManager.GetString("Help_GitCloneCommand_Option_Branch", resourceCulture);
            }
        }
        
        internal static string Help_GitCloneCommand_Argument_Repo_Url {
            get {
                return ResourceManager.GetString("Help_GitCloneCommand_Argument_Repo_Url", resourceCulture);
            }
        }
    }
}

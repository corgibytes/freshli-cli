// <auto-generated />

using Corgibytes.Freshli.Cli.DataModel;
using Corgibytes.Freshli.Cli.Functionality;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Corgibytes.Freshli.Cli.Migrations;

[DbContext(typeof(CacheContext))]
[Migration("20220706192400_Nullable")]
partial class Nullable
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2");

        modelBuilder.Entity("Corgibytes.Freshli.Cli.Functionality.CachedGitRepo", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("TEXT");

                b.Property<string>("Branch")
                    .HasColumnType("TEXT");

                b.Property<string>("LocalPath")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("Id")
                    .IsUnique();

                b.ToTable("CachedGitRepos");
            });

        modelBuilder.Entity("Corgibytes.Freshli.Cli.Functionality.CachedProperty", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Key")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Value")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("Key")
                    .IsUnique();

                b.ToTable("CachedProperties");
            });
#pragma warning restore 612, 618
    }
}
